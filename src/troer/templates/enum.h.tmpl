#if $doc
$doc
#end if
enum ${pid} {
#for $n, $v, $d in $entries
	#if $d
	$d
	#end if
	#if $v
		$n = $v,
	#else
		$n,
	#end if
#end for
};

/**
 * Check if input is valid enum ${pid}
 *
 * @param[in] val The value to test
 *
 * @return an errno like error code
 * @retval 0       Success
 * @retval -EINVAL Invalid value
 */
extern int
${pre}_check_${id}(enum ${pid} val);

/**
 * Decode a enum ${pid} encoded according to the MessagePack format
 *
 * @param[inout] decoder decoder
 * @param[out]   value   location where to store decoded value
 *
 * @return an errno like error code
 * @retval 0         Success
 * @retval -EPROTO   Not a valid MessagePack stream
 * @retval -ENOTSUP  Unsupported MessagePack stream data
 * @retval -ENOMSG   Invalid MessagePack stream data type or range
 * @retval -EMSGSIZE Not enough space to complete operation
 * @retval -ENOMEM   Memory allocation failure
 *
 * @warning
 * - @p decoder *MUST* have been initialized using dpack_decoder_init_buffer()
 *   or dpack_decoder_init_skip_buffer() before calling this function. Result is
 *   undefined otherwise.
 * - When compiled with the #CONFIG_DPACK_ASSERT_API build option disabled and
 *   @p decoder is in error state before calling this function, result is
 *   undefined. An assertion is triggered otherwise.
 *
 * @see
 * - dpack_decoder_init_buffer()
 * - dpack_decoder_init_skip_buffer()
 */
static inline int __dpack_nonull(1, 2) __dpack_nothrow __warn_result
${pre}_decode_${id}(struct dpack_decode * decoder,
		    enum ${pid} * __restrict value)
{
	return dpack_decode_int(decoder, value);
};

/**
 * Encode an enum ${pid} according to the MessagePack format
 * @param[inout] encoder encoder
 * @param[in]    value   enum ${pid} value to encode
 *
 * @return an errno like error code
 * @retval 0         Success
 * @retval -EMSGSIZE Not enough space to complete operation
 * @retval -ENOMEM   Memory allocation failure
 *
 * @warning
 * - @p encoder *MUST* have been initialized using dpack_encoder_init_buffer()
 *   before calling this function. Result is undefined otherwise.
 * - When compiled with the #CONFIG_DPACK_ASSERT_API build option disabled and
 *   @p encoder is in error state before calling this function, result is
 *   undefined. An assertion is triggered otherwise.
 *
 * @see
 * - dpack_encode_int8()
 * - dpack_encoder_init_buffer()
 */
static inline int __dpack_nonull(1) __dpack_nothrow __warn_result
${pre}_encode_${id}(struct dpack_encoder * encoder,
		    enum ${pid} value)
{
	return dpack_encode_int(encoder, value);
};

## ex: filetype=c
